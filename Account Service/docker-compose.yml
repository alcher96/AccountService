version: '3.8'

services:
  keycloak:
    image: quay.io/keycloak/keycloak:26.0.2
    container_name: keycloak
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      - KC_BOOTSTRAP_ADMIN_PASSWORD=admin
      - KC_HTTP_ENABLED=true
      - KC_HOSTNAME=keycloak
      - KC_LOG_LEVEL=info
      - KC_HEALTH_ENABLED=true
    ports:
      - "8080:8080"
    command: start-dev --import-realm
    volumes:
      - ./keycloak-data:/opt/keycloak/data/import
    networks:
      - account-service-network
    mem_limit: 1024m
    restart: unless-stopped
    

  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      - POSTGRES_DB=account_service
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - account-service-network
    mem_limit: 512m
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"  
      - "15672:15672"  
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - account-service-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5


  account-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: account-service
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:80
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=account_service;Username=postgres;Password=postgres
      - Keycloak__Authority=http://keycloak:8080/realms/account-service
    ports:
      - "80:80"
    volumes:
      - ./cert.pfx:/app/cert.pfx
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy 
    networks:
      - account-service-network
    restart: unless-stopped

volumes:
  postgres-data:
  rabbitmq-data:

networks:
  account-service-network:
    driver: bridge